<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.reiuy.dao.StudentDao">
    <select id="selectStudents" resultType="com.reiuy.domain.Student">
        select * from student order by id
    </select>
    <insert id="insertStudent">
        insert into student values(#{id},#{name},#{email},#{age})
        <!--这里使用的是占位符，格式是#{},括号内是需要占位的变量名，会通过student对象获取-->
    </insert>
</mapper>


<!--
    这是sql映射文件(sql mapper)，用来写sql语句的，mybatis会执行这些sql
    1.指定的约束文件
      <!DOCTYPE mapper
            PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
            "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
      mybatis-3-mapper.dtd这是约束文件，扩展名为dtd
      作用是用来限制和检查当前文件中出现的标签必须符合mybatis的要求


     2. mapper    是当前文件的根标签，指定的
        namespace 叫命名空间 是唯一值，可以是自定义的字符串
                   最好是使用dao接口的全限定名称。


      3.在当前文件中可以使用特定的标签来表示数据库的特定操作

        <select>表示查询 select语句

        <update>表示更新数据库操作 update语句

        <insert>表示插入，insert语句

        <delete>表示删除 delete语句

        其中  id
                需要执行的sql语句的唯一表示，mybatis会使用这个id的值来找到执行的sql语句
                可以自定义，但是要求使用接口中的方法名

            resultType(是select语句独有的)
                表示结果类型的，是sql语句执行后得到的ResultSet，我们通过遍历这个
                 ResultSet得到的java对象的类型，值写的是类型的全限定名名称


-->